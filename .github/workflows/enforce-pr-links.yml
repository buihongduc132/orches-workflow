name: Enforce PR Documentation Links
on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-links:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR body for required links
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          echo "PR Body:"
          echo "$PR_BODY"
          echo "---"
          
          # Initialize validation flags
          HAS_ISSUE_LINK=false
          HAS_DOCS_LINK=false
          HAS_TASK_LINK=false
          VALIDATION_ERRORS=()
          
          # Check for issue links (#123 or full GitHub URLs)
          if echo "$PR_BODY" | grep -qiE "(#[0-9]+|https://github\.com/[^/]+/[^/]+/issues/[0-9]+)"; then
            HAS_ISSUE_LINK=true
            echo "✓ Issue link found"
          else
            VALIDATION_ERRORS+=("Missing issue link (use #123 or full GitHub URL)")
          fi
          
          # Check for documentation links (wiki, docs, or markdown files)
          if echo "$PR_BODY" | grep -qiE "(wiki|docs?|\.md|documentation|readme)" && echo "$PR_BODY" | grep -qE "https?://"; then
            HAS_DOCS_LINK=true
            echo "✓ Documentation link found"
          else
            VALIDATION_ERRORS+=("Missing documentation link (wiki, docs, or .md files)")
          fi
          
          # Check for task/project links (optional but recommended)
          if echo "$PR_BODY" | grep -qiE "(task|project|board|milestone)"; then
            HAS_TASK_LINK=true
            echo "✓ Task/project reference found"
          fi
          
          # Special validation for different PR types
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # Feature PRs must have comprehensive links
          if echo "$PR_TITLE" | grep -qiE "(feat|feature|add|implement)"; then
            if [[ "$HAS_ISSUE_LINK" == false ]] || [[ "$HAS_DOCS_LINK" == false ]]; then
              VALIDATION_ERRORS+=("Feature PRs must link to both issues and documentation")
            fi
          fi
          
          # Bug fix PRs must link to issues
          if echo "$PR_TITLE" | grep -qiE "(fix|bug|resolve|patch)"; then
            if [[ "$HAS_ISSUE_LINK" == false ]]; then
              VALIDATION_ERRORS+=("Bug fix PRs must link to the issue being resolved")
            fi
          fi
          
          # Documentation PRs should link to related issues or tasks
          if echo "$PR_TITLE" | grep -qiE "(doc|readme|wiki|guide)"; then
            if [[ "$HAS_ISSUE_LINK" == false ]] && [[ "$HAS_TASK_LINK" == false ]]; then
              VALIDATION_ERRORS+=("Documentation PRs should link to related issues or tasks")
            fi
          fi
          
          # Output validation results
          if [[ ${#VALIDATION_ERRORS[@]} -eq 0 ]]; then
            echo "✅ All link requirements satisfied"
            exit 0
          else
            echo "❌ Link validation failed:"
            for error in "${VALIDATION_ERRORS[@]}"; do
              echo "  - $error"
            done
            echo ""
            echo "Please update your PR description to include:"
            echo "  - Issue link: #123 or https://github.com/owner/repo/issues/123"
            echo "  - Documentation link: Link to wiki, docs, or relevant .md files"
            echo "  - Task/project reference (recommended): Reference to project board or task"
            echo ""
            echo "Example PR body:"
            echo "## Description"
            echo "Brief description of changes"
            echo ""
            echo "## Related Links"
            echo "- Fixes: #123"
            echo "- Documentation: [Wiki Page](https://github.com/owner/repo/wiki/Page)"
            echo "- Task: [Project Board](https://github.com/owner/repo/projects/1)"
            exit 1
          fi

      - name: Validate AI agent information
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          
          # Check for AI agent information in PR body
          if echo "$PR_BODY" | grep -qiE "(ai.agent|agent:|gpt|claude|ai.model)"; then
            echo "✓ AI agent information found in PR body"
          else
            echo "⚠️  Consider adding AI agent information to PR body"
            echo "Example: 'AI Agent: GPT-4' or 'Generated by: Claude-3'"
          fi
          
          # Check for AI-related labels (this will be checked by GitHub)
          echo "Note: Ensure appropriate AI workflow labels are applied to this PR"

      - name: Check for breaking changes
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # Check for breaking change indicators
          if echo "$PR_TITLE $PR_BODY" | grep -qiE "(breaking|break|major|incompatible|remove|delete)"; then
            echo "⚠️  Potential breaking changes detected"
            
            # Require additional documentation for breaking changes
            if ! echo "$PR_BODY" | grep -qiE "(migration|upgrade|changelog|breaking.change)"; then
              echo "❌ Breaking changes must include migration guide or changelog entry"
              echo "Please add:"
              echo "  - Migration guide for users"
              echo "  - Changelog entry"
              echo "  - Impact assessment"
              exit 1
            fi
            
            echo "✓ Breaking change documentation found"
          fi
